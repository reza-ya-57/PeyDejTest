@using PeyDej.Tools
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using PeyDej.Data
@inject PeyDejContext _context
@model IEnumerable<PeyDej.Models.Report.RepairUnitAgendumOrder>

@{
    ViewData["Title"] = "گزارش تعمیرات";
}

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions {

    private string? GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

<div class="row">
    <div class="col-12 offset-0">
        <h3>@ViewData["Title"]</h3>
        <hr />
        <p>
            <a class="btn btn-primary" asp-action="RequestCreate">درخواست گزارش تعمیر جدید</a>
            <a class="btn btn-success" target="_blank" asp-action="Print"> پرینت فرم تعمییرات</a>
        </p>
        <hr />
        <style>
            .gCol {
                text-align: center;
            }
        </style>
        @(Html
            .Grid(Model)
            .Build(columns =>
            {
                columns.Add(model => _context.RepairRequests.FirstOrDefault(w => w.Id == model.RepairRequestId).Caption).Titled("شرح درخواست");

                columns.Add(model => _context.SubCategories.FirstOrDefault(w => w.Id == model.ActionKindId).Value)
                .Titled("نوع اقدام");

                columns.Add(model => _context.SubCategories.FirstOrDefault(w => w.Id == model.LocationId).Value).Titled("محل تعمیر");

                columns.Add(model => _context.Persons.FirstOrDefault(w => w.Id == model.PersonId).FullName).Titled("تام کاربر");

                columns.Add().Titled("ثبت گزارش تعمیر").Encoded(false).RenderedAs(model =>
                Html.ActionLink("ثبت گزارش تعمیر", "CreateRepairUnitAgendumOrderActionType", "Repairs", new { id = model.Id },
                         new { @class = "btn btn-warning btn-sm" })
                     );


            })
            .Empty("هیچ ایتمی وجود ندارد")
            .Sortable()
            .Filterable()
            .Using(GridFilterMode.Row)
            .Pageable(pager =>
            {
                pager.PageSizes = new Dictionary<Int32, String> { { 10, "10" }, { 20, "20" }, { 50, "50" }, { 0, "همه" } };
                pager.ShowPageSizes = true;
                pager.PagesToDisplay = 5;
                pager.CurrentPage = 1;
                pager.RowsPerPage = 20;
            })
            .Css("table table-bordered")
            )
    </div>
</div>
